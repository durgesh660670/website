-----------git command start---------------
>touch .gitignore
>git init
>git add .
>git commit -m "comment"
>git status
>git remote add origin https://github.com/durgesh660670/website.git
>git push origin master
>git checkout steps.txt
>git diff
>git diff --staged  #track before commit
>git diff head #track after commit
>git show
>git log
>git log -p 2
>git log --stat
>git rm -f steps.txt
>git rm --cached steps.txt
>git clone https://github.com/durgesh660670/website.git

######### Branch #######
>git branch --list
>git branch developer1 #add new branch
>git checkout developer1 #switch from master to developer1
>git branch -D list  #to delete branch
>git merge login1 #to merge data from develoepr1 to master


___________git command end-------------


___________import site start_____________

>flate icon #icon for the site
___________import site end_____________



A -------- Basic setup start---------------
1. command to initilize the backend project
>>>npm init
         

2. command to install express.
>>>npm install express

3.command to install mongoose to connect backend with mondodb database.
>>>npm install mongoose

4.command to extract and parse data from request - body parser.
>>>npm install body-parser

5.command to install templete engine.
>>>npm install hbs

6.to install nodemon (live watch, if any changes happens in the file it will restart the server)
>>npm install nodemon --save-dev

7.to run by default app.js file
>>>package.json -> scripts->"start":"nodemon src/app.js"

8. created new folder src and move to app.js into scr.

9.create Views folder outside the src folder.

10.created public folder outside src for static files.

11.models and routes folder inside src folder.


 A -------- Basic setup end---------------

 B ---------hbs configuration start............


app.js->const hbs=require('hbs');

 B ----------hbs configuration end;


c ---------- static file serve configutation start-------


app.js->app.use('/static',express.static('public'))

c ---------- static file serve configutation end-------


D ----------- databse configuration start--------------

app.js->

const mongoose=require('mongoose')

mongoose.connect('mongodb://localhost/website',()=>{

console.log('datbase connected')
})

D ----------- databse configuration end--------------


E ------------ partials configuration(make component resuable) start------------
 1. created partials folder inside views folder
 2. app.js-> hbs.registerPartials('views/partials')

E ------------ partials configuration end------------

F---------------------------
svg background -> for beackground theme
https://fontawesome.com/-> for online  font 

font awesome cmd-> for font cdn

G-------------------body parser start_------

app.js->
app.use('', routes) - below this <-

app.use(bodyParser.urlencoded({
    extended:true
}))

G-------------------body parser end_------

H--------
